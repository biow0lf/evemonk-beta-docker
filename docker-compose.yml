version: "3.7"

volumes:
  postresql14_data: {}
  redis_data: {}
  https_portal: {}
  https_logs: {}

services:
#  backend_nginx:
#    image: "docker.io/library/nginx:1.20.2"
#    container_name: "evemonk_nginx"
#    restart: "unless-stopped"
#    volumes:
#      - "./evemonk_nginx:/etc/nginx/conf.d:ro"
#
#  pghero_nginx:
#    image: "docker.io/library/nginx:1.20.2"
#    container_name: "evemonk_pghero_nginx"
#    restart: "unless-stopped"
#    volumes:
#      - "./evemonk_pghero_nginx:/etc/nginx/conf.d:ro"

#  https_portal:
#    image: "docker.io/steveltn/https-portal:1.21.0"
#    container_name: "evemonk_https_portal"
#    restart: "unless-stopped"
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - "https_portal:/var/lib/https-portal:rw"
#      - "https_logs:/var/log/nginx:rw"
#    environment:
#      STAGE: "production"
#      WEBSOCKET: "true"
#      LISTEN_IPV6: "true"
#      DOMAINS: "beta.evemonk.com -> http://backend_nginx,
#                pghero-beta.evemonk.com -> http://pghero_nginx"

  redis:
    image: "docker.io/library/redis:6.2.6"
    container_name: "evemonk_redis"
    restart: "unless-stopped"
    volumes:
      - "redis_data:/data:rw"

  memcached:
    image: "docker.io/library/memcached:1.6.12"
    container_name: "evemonk_memcached"
    restart: "unless-stopped"
    command: "memcached -m 64"
    read_only: true

  postgresql:
    image: "docker.io/library/postgres:13.5"
    container_name: "evemonk_postgresql"
    restart: "unless-stopped"
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
    volumes:
      - "postresql14_data:/var/lib/postgresql/data:rw"
      - "./evemonk_postgresql:/docker-entrypoint-initdb.d:ro"

#  pghero:
#    image: "docker.io/biow0lf/evemonk-pghero:v1.0.54"
#    container_name: "evemonk_pghero"
#    restart: "unless-stopped"
#    env_file: "./evemonk_pghero/.env"
#    read_only: true

#  sidekiq-web-ui:
#    image: "docker.io/biow0lf/evemonk-sidekiq:v1.0.54"
#    container_name: "evemonk_sidekiq_web_ui"
#    restart: "unless-stopped"
#    env_file: "./evemonk-sidekiq-ui/.env"
#    read_only: true

#  pg-extras:
#    image: "docker.io/biow0lf/evemonk-pg-extras:v1.0.7"
#    container_name: "evemonk_pg_extras"
#    restart: "unless-stopped"
#    env_file: "./evemonk-pg-extras/.env"
#    read_only: true

#  backend:
#    image: "docker.io/biow0lf/evemonk:v0.6.15"
#    container_name: "evemonk_backend"
#    restart: "unless-stopped"
#    # read_only: true
#    env_file: "./evemonk_backend/.env"
#    command: "./bin/backend"
##    volumes:
##      - "./evemonk/newrelic.yml:/app/config/newrelic.yml:ro"
##      - "/srv/static/sde-20211022:/app/static:ro"

#  sidekiq:
#    image: "docker.io/biow0lf/evemonk:v0.6.12"
#    container_name: "evemonk_sidekiq"
#    restart: "unless-stopped"
#    #    read_only: true
#    env_file: ".env"
#    environment:
#      PORT: "5100"
#    ports:
#      - "5100:5100"
#    command: "./bin/sidekiq-server"
#    volumes:
#      - "./evemonk-sidekiq/newrelic.yml:/app/config/newrelic.yml:ro"
#      - "/srv/static/sde-20211022:/app/static:ro"

#  cron:
#    image: "docker.io/biow0lf/evemonk:v0.6.12"
#    container_name: "evemonk_cron"
#    restart: "unless-stopped"
#    #    read_only: true
#    env_file: ".env"
#    command: "./bin/cron"
#    volumes:
#      - "./evemonk-cron/newrelic.yml:/app/config/newrelic.yml:ro"
#      - "/srv/static/sde-20211022:/app/static:ro"
